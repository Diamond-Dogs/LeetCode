最笨的办法：
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int len=nums.size();
        int index=0;
        int flag=0;
        for(int i=0;i<len;i++){
            if(nums[i]==target){
                index=i;
                flag=1;
                break;
            }
        }
        if(flag==0){
            for(int i=0;i<len;i++){
                if(nums[i]>target){
                    index=i;
                    break;
                }else{
                index=i+1;
                }
            }
        }
        return index;
    }
};
优化一点以后：
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int len=nums.size();
        int index=0;
        int flag=0;
        for(int i=0;i<len;i++){
            if(nums[i]>=target){
                index=i;
                flag=1;
                break;
            }else{
                index=i+1;
            }
        }
        return index;
    }
};
用二分法优化：
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int low=0;
        int high=nums.size()-1;
        while(low<=high){
            int mid=(high+low)/2;
            if(nums[mid]==target){
                return mid;
            }else if(nums[mid]>target){
                high=mid-1;
            }else{
                low=mid+1;
            }
        }
        return low;
    }
};
